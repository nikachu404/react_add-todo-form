{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","Paper","sx","backgroundColor","variant","cn","completed","title","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","defaultUserOption","useState","setTitle","selectedUser","setSelectedUser","setTodos","titleErrorAlert","setTitleErrorAlert","selectedUserErrorAlert","setSelectedUserErrorAlert","action","method","onSubmit","event","preventDefault","newUser","userName","currentTodo","maxTodoId","Math","max","TextField","display","type","label","placeholder","value","onChange","target","FormHelperText","position","borderColor","color","input","select","MenuItem","disabled","Box","textAlign","Button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea6efea9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport Paper from '@mui/material/Paper';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <Paper\n      sx={{ backgroundColor: 'rgba(0, 0, 0, 0.1)' }}\n      variant=\"outlined\"\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport Box from '@mui/material/Box';\nimport { Button, MenuItem } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nfunction findUserByName(userName: string): User | null {\n  return usersFromServer.find(user => user.name === userName) || null;\n}\n\nexport const App = () => {\n  const defaultUserOption = 'Choose a user';\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(defaultUserOption);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [titleErrorAlert, setTitleErrorAlert] = useState(false);\n  const [selectedUserErrorAlert, setSelectedUserErrorAlert] = useState(false);\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (selectedUser !== defaultUserOption && title !== '') {\n      const newUser = findUserByName(selectedUser);\n\n      setTodos(currentTodo => {\n        const maxTodoId = Math.max(...currentTodo.map(todo => todo.id));\n\n        setTitle('');\n        setSelectedUser(defaultUserOption);\n\n        return [\n          ...currentTodo,\n          {\n            id: maxTodoId + 1,\n            title,\n            completed: false,\n            userId: newUser ? newUser.id : null,\n            user: newUser,\n          },\n        ];\n      });\n    }\n\n    if (selectedUser === defaultUserOption) {\n      setSelectedUserErrorAlert(true);\n    }\n\n    if (title === '') {\n      setTitleErrorAlert(true);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleErrorAlert(false);\n  };\n\n  const handleSelectedUserChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSelectedUser(event.target.value);\n      setSelectedUserErrorAlert(false);\n    };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        className=\"form\"\n      >\n        <div className=\"field\">\n          <TextField\n            sx={{ display: 'flex' }}\n            data-cy=\"titleInput\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            label=\"Title: \"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {titleErrorAlert && (\n            <FormHelperText sx={{ position: 'absolute' }}>\n              Please enter a title\n            </FormHelperText>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <TextField\n            sx={{\n              display: 'flex',\n              borderColor: { color: 'rgb(255, 247, 247)' },\n              input: { color: 'rgb(255, 247, 247)' },\n            }}\n            select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUser}\n            label=\"User: \"\n            onChange={handleSelectedUserChange}\n          >\n            <MenuItem value={defaultUserOption} disabled>\n              {defaultUserOption}\n            </MenuItem>\n\n            {usersFromServer.map(user => (\n              <MenuItem\n                // sx={{ color}}\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          {selectedUserErrorAlert && (\n            <FormHelperText sx={{ position: 'absolute' }}>\n              Please choose a user\n            </FormHelperText>\n          )}\n        </div>\n\n        <Box textAlign=\"center\">\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </Button>\n        </Box>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}