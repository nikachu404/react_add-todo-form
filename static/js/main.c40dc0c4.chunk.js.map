{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","Paper","sx","backgroundColor","variant","cn","completed","title","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","useState","setTitle","selectedUserId","setSelectedUserId","setTodos","isTitleErrorOccured","setIsTitleErrorOccured","isSelectedUserErrorOccured","setIsSelectedUserErrorOccured","action","method","onSubmit","event","preventDefault","newUser","currentTodo","maxTodoId","Math","max","TextField","display","type","label","placeholder","value","onChange","target","FormHelperText","position","select","MenuItem","disabled","Box","textAlign","Button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c40dc0c4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport Paper from '@mui/material/Paper';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <Paper\n      sx={{ backgroundColor: 'rgba(0, 0, 0, 0.1)' }}\n      variant=\"outlined\"\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport Box from '@mui/material/Box';\nimport { Button, MenuItem } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nfunction findUserByName(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const App = () => {\n  const defaultUserOption = 'Choose a user';\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isTitleErrorOccured, setIsTitleErrorOccured] = useState(false);\n  const [\n    isSelectedUserErrorOccured,\n    setIsSelectedUserErrorOccured,\n  ] = useState(false);\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (selectedUserId === 0 || title === '') {\n      if (title === '') {\n        setIsTitleErrorOccured(true);\n      }\n\n      if (selectedUserId === 0) {\n        setIsSelectedUserErrorOccured(true);\n      }\n\n      return;\n    }\n\n    const newUser = findUserByName(selectedUserId);\n\n    setTodos(currentTodo => {\n      const maxTodoId = Math.max(...currentTodo.map(todo => todo.id));\n\n      setTitle('');\n      setSelectedUserId(0);\n\n      return [\n        ...currentTodo,\n        {\n          id: maxTodoId + 1,\n          title,\n          completed: false,\n          userId: newUser ? newUser.id : null,\n          user: newUser,\n        },\n      ];\n    });\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleErrorOccured(false);\n  };\n\n  const handleSelectedUserChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSelectedUserId(+event.target.value);\n      setIsSelectedUserErrorOccured(false);\n    };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        className=\"form\"\n      >\n        <div className=\"field\">\n          <TextField\n            sx={{ display: 'flex' }}\n            data-cy=\"titleInput\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            label=\"Title: \"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {isTitleErrorOccured && (\n            <FormHelperText sx={{ position: 'absolute' }}>\n              Please enter a title\n            </FormHelperText>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <TextField\n            sx={{ display: 'flex' }}\n            select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUserId}\n            label=\"User: \"\n            onChange={handleSelectedUserChange}\n          >\n            <MenuItem value=\"0\" disabled>\n              {defaultUserOption}\n            </MenuItem>\n\n            {usersFromServer.map(user => (\n              <MenuItem key={user.id} value={user.id}>\n                {user.name}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          {isSelectedUserErrorOccured && (\n            <FormHelperText sx={{ position: 'absolute' }}>\n              Please choose a user\n            </FormHelperText>\n          )}\n        </div>\n\n        <Box textAlign=\"center\">\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </Button>\n        </Box>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}